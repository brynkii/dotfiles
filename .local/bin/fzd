#!/bin/bash

# --TODO: Make the exclude dir feature work.
# Ensure fzf is installed
if ! command -v fzf &> /dev/null; then
    echo "fzf is not installed. Please install it before running this script."
    exit 1
fi

# Default search path
SEARCH_PATH="$HOME"
EXCLUDE_DIRS=".git,.cache,node_modules"

# Show help message
echo_help() {
    echo "Usage: fzf-dirs [OPTIONS]"
    echo "Options:"
    echo "  -r              Search from root directory (default)."
    echo "  -b              Search from home directory."
    echo "  -h, --help      Show this help message."
    echo "  --exclude-dirs  Comma-separated list of directories to exclude from the search."
    echo "  -d DEST_DIR     Specify a destination directory to copy files to (default is current directory)."
    exit 0
}

# Default destination directory
DEST_DIR="$PWD"

# Parse arguments
while [[ "$1" != "" ]]; do
    case "$1" in
        -r)
            SEARCH_PATH="/"
            ;;
        -b)
            SEARCH_PATH="$HOME"
            ;;
        -h|--help)
            echo_help
            ;;
        --exclude-dirs)
            shift
            EXCLUDE_DIRS="$1"
            ;;
        -d)
            shift
            DEST_DIR="$1"
            ;;
        *)
            echo "Invalid option: $1"
            echo_help
            ;;
    esac
    shift
done

# Ensure the destination directory exists
if [ ! -d "$DEST_DIR" ]; then
    echo "Destination directory '$DEST_DIR' does not exist. Creating it..."
    mkdir -p "$DEST_DIR"
    if [ $? -ne 0 ]; then
        echo "Failed to create destination directory. Exiting."
        exit 1
    fi
fi

# Build the find command with excluded directories
FIND_CMD="find $SEARCH_PATH -type d"
for DIR in $(echo "$EXCLUDE_DIRS" | tr ',' '\n'); do
    FIND_CMD+=" ! -path '*/$DIR/*'"
done

# Prompt user to select directories (multi-selection enabled)
SELECTED_DIRS=$(eval "$FIND_CMD" 2>/dev/null | fzf --prompt="Select directories to copy: " --multi \
    --preview="eza -l --no-user --no-time --no-permissions --total-size --tree --icons {}" --preview-window=right:50%)

# Exit if no directory is selected
if [ -z "$SELECTED_DIRS" ]; then
    echo "No directories selected. Exiting."
    exit 0
fi

# Copy selected directories to the specified destination directory
while IFS= read -r DIR; do
    echo "Copying '$DIR' to '$DEST_DIR'..."
    cp -r "$DIR" "$DEST_DIR"

    if [ $? -eq 0 ]; then
        echo "Successfully copied '$DIR' to '$DEST_DIR'."
    else
        echo "Failed to copy '$DIR'. Please check your permissions or path."
    fi
done <<< "$SELECTED_DIRS"

