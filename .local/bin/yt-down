#!/usr/bin/env bash

set -euo pipefail

# Colors
RED=$'\033[1;31m'
GRN=$'\033[1;32m'
YEL=$'\033[1;33m'
NC=$'\033[0m'

print_help() {
  cat <<EOF
Usage: $(basename "$0") [OPTIONS] <url1> <url2> ...

Download video(s) or audio from the web using yt-dlp.

OPTIONS:
  --help        Show this help message and exit

USAGE:
  ./download-media.sh <url1> <url2> ...

The script will prompt you to choose between downloading video (720p) or best audio.
It supports playlists and individual videos. Audio will include embedded thumbnails and metadata.

EXAMPLES:
  ./download-media.sh https://youtube.com/watch?v=example1 https://youtube.com/watch?v=example2
EOF
}

if [[ "${1:-}" == "--help" || $# -eq 0 ]]; then
  print_help
  exit 0
fi

# Check dependencies
deps=(yt-dlp fzf)
for cmd in "${deps[@]}"; do
  if ! command -v "$cmd" &>/dev/null; then
    echo "${RED}$cmd is missing. Please install it using your package manager.${NC}"
    exit 1
  fi
done

# Select output directory
ROOT_DIR="$HOME/Videos/youtube"
mkdir -p "$ROOT_DIR"

EXISTING_DIRS=("$(find "$ROOT_DIR" -mindepth 1 -maxdepth 1 -type d 2>/dev/null)")
DIR_CHOICES=("Create new directory" "None (use root)" "${EXISTING_DIRS[@]}")
SELECTED_DIR=$(printf "%s\n" "${DIR_CHOICES[@]}" | fzf --prompt="Choose output directory: ")

case "$SELECTED_DIR" in
  "Create new directory")
    read -rp "Enter new directory name: " NEW_DIR
    OUT_DIR="$ROOT_DIR/$NEW_DIR"
    mkdir -p "$OUT_DIR"
    ;;
  "None (use root)")
    OUT_DIR="$ROOT_DIR"
    ;;
  *)
    OUT_DIR="$SELECTED_DIR"
    ;;
esac

# Choose download type
CHOICE=$(printf "Video (720p)\nAudio (best with thumbnail)" | fzf --prompt="Choose download type: ")

# Optional: Select audio format if needed
if [[ "$CHOICE" == "Audio (best with thumbnail)" ]]; then
  AUDIO_FORMAT=$(printf "mp3\nopus\nflac" | fzf --prompt="Choose audio format: ")
fi

# Logging setup
LOGFILE="$HOME/.local/share/download-media/download.log"
mkdir -p "$(dirname "$LOGFILE")"

# Collect URLs
URLS=("$@")

# Download loop
for URL in "${URLS[@]}"; do
  echo "$(date): Starting download for $URL" >> "$LOGFILE"

  if [[ "$CHOICE" == "Video (720p)" ]]; then
    echo "\U1F3AC ${YEL}Downloading video at 720p...${NC}"
    yt-dlp --restrict-filenames \
      --progress \
      -f "bestvideo[height<=720]+bestaudio/best[height<=720]" \
      -o "$OUT_DIR/%(title)s.%(ext)s" \
      "$URL"
  elif [[ "$CHOICE" == "Audio (best with thumbnail)" ]]; then
    echo "\U1F3B5 ${YEL}Downloading audio with embedded thumbnail...${NC}"
    yt-dlp --restrict-filenames \
      --progress \
      -f bestaudio \
      --extract-audio \
      --audio-format "$AUDIO_FORMAT" \
      --embed-thumbnail \
      --add-metadata \
      -o "$OUT_DIR/%(title)s.%(ext)s" \
      "$URL"
  else
    echo "${RED}No valid selection made.${NC}"
    exit 1
  fi

  echo "$(date): Downloaded $URL to $OUT_DIR as $CHOICE${AUDIO_FORMAT:+ ($AUDIO_FORMAT)}" >> "$LOGFILE"
  echo "${GRN}Download complete for: $URL${NC}"
done
